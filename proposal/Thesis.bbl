\begin{thebibliography}{10}

\bibitem{STAPL_2010}
Antal Buss, Harshvardhan, Ioannis Papadopoulos, Olga Pearce, Timmie Smith,
  Gabriel Tanase, Nathan Thomas, Xiabing Xu, Mauro Bianco, Nancy~M. Amato, and
  Lawrence Rauchwerger.
\newblock Stapl: Standard template adaptive parallel library.
\newblock In {\em Proceedings of the 3rd Annual Haifa Experimental Systems
  Conference}, SYSTOR '10, New York, NY, USA, 2010. Association for Computing
  Machinery.

\bibitem{dist_java}
Pattamsetti Raja~Malleswara Rao.
\newblock {\em Distributed computing in Java 9: make the best of Java for
  distributing applications}.
\newblock Packt, 2017.

\bibitem{vt_cs}
Distributed shared memory.
\newblock
  \url{courses.cs.vt.edu/~cs5204/fall99/distributedSys/amento/dsm.html}.

\bibitem{virtualization}
Dijiang Huang and Huijun Wu.
\newblock Chapter 2 - virtualization.
\newblock In Dijiang Huang and Huijun Wu, editors, {\em Mobile Cloud
  Computing}, pages 31--64. Morgan Kaufmann, 2018.

\bibitem{stapl_parallel_container}
Gabriel Tanase, Antal Buss, Adam Fidel, Harshvardhan, Ioannis Papadopoulos,
  Olga Pearce, Timmie Smith, Nathan Thomas, Xiabing Xu, Nedal Mourad, Jeremy
  Vu, Mauro Bianco, Nancy~M. Amato, and Lawrence Rauchwerger.
\newblock The stapl parallel container framework.
\newblock {\em SIGPLAN Not.}, 46(8):235–246, February 2011.

\bibitem{charm_tutorial}
Charm tutorial.
\newblock \url{charmplusplus.org/CharmConcepts.html}.

\bibitem{X10_2005}
Philippe Charles, Christian Grothoff, Vijay Saraswat, Christopher Donawa, Allan
  Kielstra, Kemal Ebcioglu, Christoph von Praun, and Vivek Sarkar.
\newblock X10.
\newblock In {\em Proceedings of the 20th annual ACM SIGPLAN conference on
  Object oriented programming systems languages and applications - OOPSLA
  ’05}. ACM Press, 2005.

\bibitem{chapel_rts_ppt}
Greg Titus.
\newblock The chapel runtime.
\newblock \url{chapel-lang.org/presentations/Chapel-Runtime-Charm++13.pdf}.

\bibitem{memcached_linux}
Brad Fitzpatrick.
\newblock Distributed caching with memcached.
\newblock \url{linuxjournal.com/article/7451}.

\bibitem{IDS}
David Reinsel, John Gantz, and John Rydning.
\newblock The digitization of the world: From edge to core.
\newblock {\em International Data Corporation}, page~3, November 2018.

\bibitem{genome_size}
Scott Christley, Yiming Lu, Chen Li, and Xiaohui Xie.
\newblock {Human genomes as email attachments}.
\newblock {\em Bioinformatics}, 25(2):274--275, 09 2008.

\bibitem{virtual_memory_tlb}
Arkaprava Basu, Jayneel Gandhi, Jichuan Chang, Mark~D. Hill, and Michael~M.
  Swift.
\newblock Efficient virtual memory for big memory servers.
\newblock {\em SIGARCH Comput. Archit. News}, 41(3):237–248, June 2013.

\bibitem{towards_dist_cpp}
Gordon Brown, Ruyman Reyes, and Michael Wong.
\newblock Towards heterogeneous and distributed computing in c++.
\newblock In {\em Proceedings of the International Workshop on OpenCL},
  IWOCL'19, New York, NY, USA, 2019. Association for Computing Machinery.

\bibitem{STAPL}
Lawrence Rauchwerger, Francisco Arzu, and Koji Ouchi.
\newblock Standard templates adaptive parallel library (stapl).
\newblock In {\em Selected Papers from the 4th International Workshop on
  Languages, Compilers, and Run-Time Systems for Scalable Computers}, LCR '98,
  page 402–409, Berlin, Heidelberg, 1998. Springer-Verlag.

\bibitem{practical_dist_c}
Maurizio Drocco, Vito~Giovanni Castellana, and Marco Minutoli.
\newblock Practical distributed programming in c++.
\newblock HPDC '20, page 35–39, New York, NY, USA, 2020. Association for
  Computing Machinery.

\bibitem{taskflow}
Chun-Xun Lin, Tsung-Wei Huang, Guannan Guo, and Martin D.~F. Wong.
\newblock A modern c++ parallel task programming library.
\newblock In {\em Proceedings of the 27th ACM International Conference on
  Multimedia}, MM '19, page 2284–2287, New York, NY, USA, 2019. Association
  for Computing Machinery.

\bibitem{intel_tbb}
Shameem Akhter and Jason Roberts.
\newblock {\em Multi-core programming: increasing performance through software
  multi-threading}.
\newblock Intel Press, 2006.

\bibitem{parallel_programming_w_charm}
Bilge Acun, Abhishek Gupta, Nikhil Jain, Akhil Langer, Harshitha Menon, Eric
  Mikida, Xiang Ni, Michael Robson, Yanhua Sun, Ehsan Totoni, Lukasz
  Wesolowski, and Laxmikant Kale.
\newblock Parallel programming with migratable objects: Charm++ in practice.
\newblock In {\em Proceedings of the International Conference for High
  Performance Computing, Networking, Storage and Analysis}, SC '14, page
  647–658. IEEE Press, 2014.

\bibitem{chapel}
D.~{Callahan}, B.~L. {Chamberlain}, and H.~P. {Zima}.
\newblock The cascade high productivity language.
\newblock In {\em Ninth International Workshop on High-Level Parallel
  Programming Models and Supportive Environments, 2004. Proceedings.}, pages
  52--60, 2004.

\bibitem{X10}
Philippe Charles, Christian Grothoff, Vijay Saraswat, Christopher Donawa, Allan
  Kielstra, Kemal Ebcioglu, Christoph von Praun, and Vivek Sarkar.
\newblock X10: An object-oriented approach to non-uniform cluster computing.
\newblock {\em SIGPLAN Not.}, 40(10):519–538, October 2005.

\bibitem{spark}
J.~{Fu}, J.~{Sun}, and K.~{Wang}.
\newblock Spark – a big data processing platform for machine learning.
\newblock In {\em 2016 International Conference on Industrial Informatics -
  Computing Technology, Intelligent Technology, Industrial Information
  Integration (ICIICII)}, pages 48--51, 2016.

\bibitem{zookeeper}
Patrick Hunt, Mahadev Konar, Yahoo Grid, Flavio Junqueira, Benjamin Reed, and
  Yahoo Research.
\newblock Zookeeper: Wait-free coordination for internet-scale systems.
\newblock {\em ATC. USENIX}, 8, 06 2010.

\bibitem{memcached}
B.~Fitzpatrick.
\newblock a distributed memory object caching system.

\bibitem{GAM}
Qingchao Cai, Wentian Guo, Hao Zhang, Divyakant Agrawal, Gang Chen, Beng~Chin
  Ooi, Kian-Lee Tan, Yong~Meng Teo, and Sheng Wang.
\newblock Efficient distributed memory management with rdma and caching.
\newblock {\em Proc. VLDB Endow.}, 11(11):1604–1617, July 2018.

\bibitem{ilp_history}
B~Ramakrishna Rau and Joseph~A. Fisher.
\newblock Instruction-level parallel processing: History, overview and
  perspective.
\newblock {\em The Journal of Supercomputing}, 7(1), 1993.

\bibitem{hpc_openstax}
Kevin Dowd and Charles Severance.
\newblock {\em High Performance Computing Chapter 5}.
\newblock OpenStax-CNX, 2010.

\bibitem{dist_systems_concepts}
George~F. Coulouris.
\newblock {\em Distributed systems: Concepts and design, Chapter 1}.
\newblock Addison-Wesley, 2011.

\bibitem{Sipser_2006}
Michael Sipser.
\newblock {\em Introduction to the theory of computation}.
\newblock Thomson Course Technology, 2nd ed edition, 2006.

\bibitem{Greenlaw_Hoover_Ruzzo_1995}
Raymond Greenlaw, H.~James Hoover, and Walter~L. Ruzzo.
\newblock {\em Limits to parallel computation: P-completeness theory}.
\newblock Oxford University Press, 1995.

\bibitem{Alvarez_Greenlaw_2000}
C.~Alvarez and R.~Greenlaw.
\newblock A compendium of problems complete for symmetric logarithmic space:.
\newblock {\em Computational Complexity}, 9(2):123–145, Dec 2000.

\bibitem{Stallings_2010}
William Stallings.
\newblock {\em Computer organization and architecture: designing for
  performance}.
\newblock Prentice Hall, 8th ed edition, 2010.

\bibitem{Chou_DeWitt_1986}
Hong~Tai Chou and David~J. DeWitt.
\newblock An evaluation of buffer management strategies for relational database
  systems.
\newblock {\em Algorithmica}, 1(1–4):311–336, Nov 1986.

\bibitem{n1682}
Pete Becker.
\newblock N1682: A multi-threading library for standard c++.
\newblock \url{wg21.link/n1682}.

\bibitem{n1815}
Lawrence Crowl.
\newblock N1815: Iso c++ strategic plan for multithreading.
\newblock \url{wg21.link/n1815}.

\bibitem{n1875}
Lawrence Crowl.
\newblock N1875: C++ threads.
\newblock \url{wg21.link/n1875}.

\bibitem{n1883}
Kevlin Henney.
\newblock N1883: Preliminary threading library proposal for tr2.
\newblock \url{wg21.link/n1883}.

\bibitem{n1907}
Pete Becker.
\newblock N1907: A multi-threading library for standard c++, revision 1.
\newblock \url{wg21.link/n1907}.

\bibitem{n2043}
Ion Gaztañaga.
\newblock N2043: Simplifying and extending mutex and scoped lock types for c++
  multi-threading library.
\newblock \url{wg21.link/n2043}.

\bibitem{n2096}
Peter Dimov.
\newblock N2096: Transporting values and exceptions between threads.
\newblock \url{wg21.link/n2096}.

\bibitem{n2139}
Anthony Williams.
\newblock N2139: Thoughts on a thread library for c++.
\newblock \url{wg21.link/n2139}.

\bibitem{n2178}
Thoughts on~a Thread Library~for C++.
\newblock N2178: Proposed text for chapter 30, thread support library
  [threads].
\newblock \url{wg21.link/n2139}.

\bibitem{n2184}
Howard~E. Hinnant.
\newblock N2184: Thread launching for c++.
\newblock \url{wg21.link/n2184}.

\bibitem{n2285}
Pete Becker.
\newblock N2285: A multi-threading library for standard c++, revision 2.
\newblock \url{wg21.link/n2285}.

\bibitem{n2889}
Lawrence Crowl.
\newblock N2889: An asynchronous call for c++.
\newblock \url{wg21.link/n2889}.

\bibitem{n2320}
Howard~E. Hinnant, Beman Dawes, Lawrence Crowl, Jeff Gardland, and Anthony
  Williams.
\newblock N2320: Multi-threading library for standard c++.
\newblock \url{wg21.link/n2320}.

\bibitem{p0443}
et.~al. Hoberock.
\newblock P0443: Multi-threading library for standard c++.
\newblock \url{wg21.link/p0443}.

\bibitem{sharing_cpu_memory}
{Xiaodong Zhang}, {Yanxia Qu}, and {Li Xiao}.
\newblock Improving distributed workload performance by sharing both cpu and
  memory resources.
\newblock In {\em Proceedings 20th IEEE International Conference on Distributed
  Computing Systems}, pages 233--241, 2000.

\bibitem{challenge_dist_mem}
{Nian-Feng Tzeng} and S.~J. {Wallach}.
\newblock Issues on the architecture and the design of distributed shared
  memory systems.
\newblock In {\em Proceedings International Conference on Computer Design. VLSI
  in Computers and Processors}, pages 60--61, 1996.

\bibitem{amd_x86_64}
System v application binary interface.
\newblock \url{uclibc.org/docs/psABI-x86_64.pdf}.

\bibitem{stapl_parray}
Gabriel Tanase, Mauro Bianco, Nancy~M. Amato, and Lawrence Rauchwerger.
\newblock The stapl parray.
\newblock In {\em Proceedings of the 2007 Workshop on MEmory Performance:
  DEaling with Applications, Systems and Architecture}, MEDEA '07, page
  73–80, New York, NY, USA, 2007. Association for Computing Machinery.

\bibitem{stapl_graph}
Harshvardhan, Nancy~M. Amato, and Lawrence Rauchweger.
\newblock Processing big data graphs on memory-restricted systems.
\newblock In {\em Proceedings of the 23rd International Conference on Parallel
  Architectures and Compilation}, PACT '14, page 517–518, New York, NY, USA,
  2014. Association for Computing Machinery.

\bibitem{stapl_skeleton_framework}
Mani Zandifar, Mustafa Abdul~Jabbar, Alireza Majidi, David Keyes, Nancy~M.
  Amato, and Lawrence Rauchwerger.
\newblock Composing algorithmic skeletons to express high-performance
  scientific applications.
\newblock In {\em Proceedings of the 29th ACM on International Conference on
  Supercomputing}, ICS '15, page 415–424, New York, NY, USA, 2015.
  Association for Computing Machinery.

\bibitem{stapl_rts}
Ioannis Papadopoulos, Nathan Thomas, Adam Fidel, Nancy~M. Amato, and Lawrence
  Rauchwerger.
\newblock Stapl-rts: An application driven runtime system.
\newblock In {\em Proceedings of the 29th ACM on International Conference on
  Supercomputing}, ICS '15, page 425–434, New York, NY, USA, 2015.
  Association for Computing Machinery.

\bibitem{euler_1}
Project euler: Problem 1.
\newblock \url{projecteuler.net/problem=1}.

\bibitem{charm_93}
Laxmikant~V. Kale and Sanjeev Krishnan.
\newblock Charm++: A portable concurrent object oriented system based on c++.
\newblock {\em SIGPLAN Not.}, 28(10):91–108, October 1993.

\bibitem{charm_rts}
L.~V. Kal{\'e}, B.~Ramkumar, A.~B. Sinha, and V.~A. Saletore.
\newblock {The CHARM Parallel Programming Language and System: Part II -- The
  Runtime system}.
\newblock {\em Parallel Programming Laboratory Technical Report \#95-03}, 1994.

\bibitem{X10_site}
The x10 programming language.
\newblock \url{x10-lang.org}.

\bibitem{chapel_2007}
B.L. Chamberlain, D.~Callahan, and H.P. Zima.
\newblock Parallel programmability and the chapel language.
\newblock {\em The International Journal of High Performance Computing
  Applications}, 21(3):291--312, 2007.

\bibitem{chapel_github}
Github: Chapel language.
\newblock \url{https://github.com/chapel-lang/chapel}.

\bibitem{lj_dev}
Brad Fitzpatrick.
\newblock memcached: lj\_dev - livejournal.
\newblock \url{lj-dev.livejournal.com/539656.html}.

\bibitem{mpi}
Mpi: A message passing interface.
\newblock In {\em Supercomputing '93:Proceedings of the 1993 ACM/IEEE
  Conference on Supercomputing}, pages 878--883, 1993.

\bibitem{ARMCI}
Jarek Nieplocha and Bryan Carpenter.
\newblock Armci: A portable remote memory copy library for distributed array
  libraries and compiler run-time systems.
\newblock In Jos{\'e} Rolim, Frank Mueller, Albert~Y. Zomaya, Fikret Ercal,
  Stephan Olariu, Binoy Ravindran, Jan Gustafsson, Hiroaki Takada, Ron Olsson,
  Laxmikant~V. Kale, Pete Beckman, Matthew Haines, Hossam ElGindy, Denis
  Caromel, Serge Chaumette, Geoffrey Fox, Yi~Pan, Keqin Li, Tao Yang,
  G.~Chiola, G.~Conte, L.~V. Mancini, Domenique M{\'e}ry, Beverly Sanders,
  Devesh Bhatt, and Viktor Prasanna, editors, {\em Parallel and Distributed
  Processing}, pages 533--546, Berlin, Heidelberg, 1999. Springer Berlin
  Heidelberg.

\bibitem{metagenomics}
José~M. Abuín, Nuno Lopes, Luís Ferreira, Tomás~F. Pena, and Bertil
  Schmidt.
\newblock Big data in metagenomics: Apache spark vs mpi.
\newblock {\em PLOS ONE}, 15(10):1--20, 10 2020.

\end{thebibliography}
